Programmer:      Andrew McCormick 
Main Program .c: main.c     
Class:           CS 4760 Operating Systems    
Instructor:      Mark Hauschild   
Due Date:        3/21/2019

	This program takes in one file to read from.  When the program starts, after the user writes the executable oss, the user has five options for command-line input.  They can write -h to find out the other two choices, -i to use a custom input file, -n to specify the number of child processes to launch.  If the user uses just the executable, the program will use the file input.dat as a default input file and 2 as the default for the number of process that can run at the same time.  After the user tells the program to run, the user should look inside the two output files, palin.out and nopaline.out.  palin.out should include all the strings that are palindromes with what child process they were processed by and what index they were.  nopaline.out includes the same information, but for non-palindromes.  stderr will also output to the console when a child process is trying to enter and exiting the critical section and when it is in the critical section.  

	This program copies all the lines from the input file to an array of strings in shared memory.  It then creates a named semaphore to be used to keep the output files safe while different child processes are trying to write to it.  The parent process will then fork and exec different child processes and send them five indexes of the array of strings in shared memory.  The child processes will parse the different strings to find if they are palindromes and write the strings to the correct output file. The child processes are only allowed in the critical section when no other child process is in there.  The parent process does not wait for the children processes but continually checks to see if one terminates.  

	If more than two real world minutes pass for the parent process is done or CTRL-C is pushed, the parent process will terminate all the children process still alive, output a termination message to the stderr, detach and delete the named semaphore and close and release all shared memory before terminating. 

  


